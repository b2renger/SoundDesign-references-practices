#N canvas 192 140 1085 625 10;
#N canvas 363 102 643 640 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 36 140 tabreceive~ \$0-hann;
#X obj 14 353 *~;
#X obj 15 8 block~ 512 4;
#X text 85 88 The inlet~ now re-uses 3/4 of the previous block \, along
with the 128 new samples.;
#X text 221 141 window function as before.;
#X obj 76 196 tabreceive~ \$0-gain;
#X obj 77 225 *~;
#X obj 16 506 *~;
#X obj 46 477 tabreceive~ \$0-hann;
#X obj 77 283 /~ 768;
#X text 332 266 divide by 3N/2 (factor of N because rfft and rifft
aren't normalized \, and 3/2 is the gain of overlap-4 reconstruction
when Hann window function is applied twice.);
#X text 371 168 Just to show we're doing something \, we multiply each
channel by a gain controlled by an array in the main window. The control
is quartic-scaled for easy editing.;
#X obj 78 251 *~;
#X text 217 444 Multiply the (complex-valued) spectrum amplitudes by
the (real-valued) gain-and-normalization-factor;
#X obj 15 399 rifft~;
#X text 138 352 Real-valued inverse Fourier transform. This uses only
the first N/@ points of its inputs \, supplying the rest by symmerty
(so it's OK that rfft~ obly puts out those N/2 points.) There's only
one outlet because the output is real-valued.;
#X obj 16 566 outlet~;
#X text 88 499 Multiply by the Hann window function again \, necessary
because the operation we performed might result in a signal that doesn't
go smoothly to zero at both ends.;
#X text 89 566 This repackages the output into 64-sample chunks for
the parent window. Since we're operating with an overlap \, the outlet~
object performs an overlapped sum of the blocks computed in this window.
;
#X text 129 8 block~ object specifies vector size of 512 and overlap
four. This window now computes blocks of 512 samples at intervals of
128 samples computed on the parent patch.;
#X obj 56 353 *~;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 2 1 23 0;
#X connect 3 0 0 1;
#X connect 4 0 17 0;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 15 0;
#X connect 9 0 15 1;
#X connect 10 0 19 0;
#X connect 11 0 10 1;
#X connect 12 0 4 1;
#X connect 12 0 23 1;
#X connect 15 0 12 0;
#X connect 17 0 10 0;
#X connect 23 0 17 1;
#X restore 254 413 pd fft-analysis;
#N canvas 35 66 592 433 Hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-hann 512 float 0;
#X coords 0 1 511 0 200 120 1;
#X restore 293 249 graph;
#X msg 171 263 0;
#X obj 65 312 osc~;
#X obj 65 264 samplerate~;
#X obj 65 335 *~ -0.5;
#X obj 65 358 +~ 0.5;
#X obj 57 383 tabwrite~ \$0-hann;
#X text 279 241 1;
#X text 272 359 0;
#X text 288 372 0;
#X obj 65 288 / 512;
#X obj 57 241 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 336 221 Hann window;
#X text 113 310 period 512;
#X text 90 215 recalculate Hann;
#X text 125 230 window table;
#X obj 57 146 loadbang;
#X msg 79 179 \; pd dsp 1;
#X text 40 27 The Hann window is now recomputed on 'loadbang' to make
the file smaller (it doesn't have to be saved with the array.);
#X text 474 375 511;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 11 0 1 0;
#X connect 11 0 6 0;
#X connect 16 0 11 0;
#X connect 16 0 17 0;
#X restore 70 455 pd Hann-window;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-gain 256 float 3;
#A 0 0.7 0.5758 0.58792 0.596 0.60408 0.61216 0.62428 0.63236 0.64448
0.64852 0.65256 0.6566 0.66064 0.66872 0.6768 0.68084 0.68488 0.68892
0.68892 0.69296 0.69296 0.69296 0.70104 0.70508 0.70912 0.71316 0.72528
0.72932 0.73336 0.74144 0.74952 0.75356 0.76164 0.76972 0.78588 0.798
0.82224 0.84244 0.85456 0.8586 0.86264 0.86668 0.87072 0.87476 0.8788
0.8788 0.88284 0.88284 0.88284 0.88688 0.88688 0.88688 0.89092 0.89092
0.89092 0.89092 0.89092 0.89092 0.89092 0.89092 0.89092 0.89092 0.88284
0.8788 0.87072 0.86264 0.85052 0.84648 0.83032 0.78184 0.74952 0.70104
0.66872 0.6566 0.65256 0.64044 0.6364 0.62832 0.62428 0.6162 0.61216
0.61216 0.60812 0.60408 0.60408 0.60004 0.60004 0.60004 0.596 0.596
0.59398 0.59196 0.59196 0.59196 0.59196 0.59196 0.59196 0.59196 0.59196
0.59196 0.59196 0.59196 0.59196 0.59196 0.59196 0.59196 0.596 0.60408
0.61216 0.62024 0.62428 0.62832 0.63236 0.64044 0.64448 0.64852 0.66064
0.66266 0.66468 0.66872 0.67276 0.6768 0.68084 0.68488 0.68892 0.69296
0.70104 0.70508 0.71316 0.7172 0.72124 0.72932 0.73336 0.7374 0.74144
0.74548 0.74548 0.74952 0.74952 0.74952 0.74952 0.75356 0.75356 0.7576
0.7576 0.76164 0.76568 0.76568 0.76568 0.76568 0.76568 0.76568 0.76568
0.76568 0.76568 0.7576 0.73336 0.70508 0.68488 0.68084 0.67276 0.66468
0.6566 0.64448 0.64044 0.63236 0.6162 0.60812 0.60408 0.596 0.58388
0.5758 0.57176 0.6768 0.68892 0.69296 0.697 0.70104 0.70104 0.70508
0.70508 0.70912 0.70912 0.70912 0.70912 0.71316 0.7172 0.72124 0.72528
0.72932 0.73336 0.7374 0.74144 0.74346 0.74548 0.75356 0.7576 0.76164
0.76568 0.76972 0.77376 0.7778 0.78184 0.78588 0.78992 0.79396 0.798
0.80204 0.80608 0.80608 0.80608 0.80608 0.80608 0.80608 0.80608 0.80204
0.798 0.79396 0.78184 0.7778 0.77174 0.76568 0.7576 0.74952 0.74144
0.73336 0.72528 0.71316 0.70104 0.68892 0.68084 0.6566 0.64044 0.62428
0.6162 0.60812 0.60408 0.60004 0.596 0.59196 0.58388 0.58388 0.57984
0.57984 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7;
#X coords 0 1 256 -0.01 500 250 1 0 0;
#X restore 34 20 graph;
#X msg 28 349 const 0;
#X obj 70 430 s \$0-gain;
#X text 20 253 0;
#X text 20 17 1;
#X text 34 276 0;
#X text 269 2 GAIN;
#X obj 31 321 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 50 319 Reset gain;
#X obj 253 454 *~ 2;
#X obj 258 503 dac~;
#N canvas 0 50 450 300 (subpatch) 0;
#X array E01-spectrum 128 float 0;
#X coords 0 4300 127 -40 257 130 1;
#X restore 610 143 graph;
#X text 411 427 <-- click to graph;
#N canvas 65 93 558 569 fft 0;
#X obj 19 62 inlet~;
#X obj 85 214 inlet;
#X obj 19 92 rfft~;
#X obj 19 125 *~;
#X obj 50 125 *~;
#X obj 19 155 sqrt~;
#X obj 85 248 tabwrite~ E01-spectrum;
#X obj 332 109 block~ 4096 1;
#X obj 19 181 biquad~ 0 0 0 0 1;
#X text 83 93 Fourier series;
#X text 88 146 magnitude;
#X text 86 131 calculate;
#X text 21 3 This subpatch computes the spectrum of the incoming signal
with a (rectangular windowed) FFT. FFTs aren't properly introduced
until much later.;
#X text 83 62 signal to analyze;
#X text 182 166 delay two samples;
#X text 181 182 for better graphing;
#X obj 90 425 samplerate~;
#X obj 90 402 bng 18 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X floatatom 90 472 5 0 0 0 - - -, f 5;
#X obj 90 448 / 256;
#X obj 90 378 loadbang;
#X floatatom 90 541 5 0 0 0 - - -, f 5;
#X obj 98 494 s fundamental;
#X obj 90 517 ftom;
#X text 146 540 <-just out of curiosity \, here's the pitch;
#X text 14 319 At load time \, calculate a good choice of fundamental
frequency for showing spectra: the 16th bin in a 4096-point spectrum
\, so SR*16/4096 or SR/256.;
#X text 135 216 "bang" into this inlet to graph it;
#X connect 0 0 2 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 8 0 6 0;
#X connect 16 0 19 0;
#X connect 17 0 16 0;
#X connect 18 0 22 0;
#X connect 18 0 23 0;
#X connect 19 0 18 0;
#X connect 20 0 17 0;
#X connect 23 0 21 0;
#X restore 304 469 pd fft;
#X text 656 90 ---- 0.02 seconds ----;
#X obj 388 428 bng 18 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 641 276 1;
#X text 675 276 2;
#X text 707 276 3;
#X text 739 276 4;
#X text 772 276 5;
#X text 802 276 6;
#X text 833 276 7;
#X text 609 276 0;
#X text 645 295 -- partial number --;
#X text 703 121 SPECTRUM;
#X text 870 261 0;
#X text 868 140 1;
#X text 869 199 0.5;
#X text 859 74 -5;
#X obj 134 343 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 131 371 const 0.7;
#X obj 435 293 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 426 366 metro 15;
#X text 787 3 PHASE;
#X obj 252 302 adc~;
#X text 537 256 20000;
#X connect 0 0 11 0;
#X connect 3 0 4 0;
#X connect 9 0 3 0;
#X connect 11 0 12 0;
#X connect 11 0 12 1;
#X connect 11 0 15 0;
#X connect 17 0 15 1;
#X connect 32 0 33 0;
#X connect 33 0 4 0;
#X connect 34 0 35 0;
#X connect 35 0 17 0;
#X connect 37 0 0 0;
#X connect 37 1 0 0;
